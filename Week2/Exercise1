
### Task 1: Simple Shell Commands
#### a) Arithmetic Operations

```bash
#!/bin/bash

# Input two values
echo "Enter first number: "
read num1
echo "Enter second number: "
read num2

# Perform arithmetic operations
sum=$((num1 + num2))
diff=$((num1 - num2))
prod=$((num1 * num2))
if [ $num2 -ne 0 ]; then
    div=$((num1 / num2))
else
    div="undefined (division by zero)"
fi

# Display results
echo "Sum: $sum"
echo "Difference: $diff"
echo "Product: $prod"
echo "Division: $div"
```

#### b) Display File Attributes and Contents

```bash
#!/bin/bash

# Input file name
echo "Enter file name: "
read filename

# Display file attributes
ls -l $filename

# Display file contents
echo "File contents: "
cat $filename
```

#### c) Copy and Rename File

```bash
#!/bin/bash

# Input file names
echo "Enter the source file name: "
read source
echo "Enter the destination file name: "
read destination
echo "Enter the new name for the file: "
read newname

# Copy the file
cp $source $destination

# Rename the file
mv $destination $newname

echo "File copied to $destination and renamed to $newname"
```

---

### Task 2: Using `if`, `while`, `until`, and `break` Statements
#### d) Check if a Number is Odd or Even

```bash
#!/bin/bash

# Input a number
echo "Enter a number: "
read number

# Check if the number is odd or even
if ((number % 2 == 0)); then
    echo "$number is even."
else
    echo "$number is odd."
fi
```

#### e) Compare Two Numbers

```bash
#!/bin/bash

# Input two numbers
echo "Enter first number: "
read num1
echo "Enter second number: "
read num2

# Compare the numbers
if [ $num1 -gt $num2 ]; then
    echo "$num1 is greater than $num2."
elif [ $num1 -lt $num2 ]; then
    echo "$num1 is less than $num2."
else
    echo "$num1 is equal to $num2."
fi
```

#### f) Display Numbers and Calculate Sum

```bash
#!/bin/bash

# Input two numbers
echo "Enter first number: "
read num1
echo "Enter second number: "
read num2

# Display numbers between num1 and num2
echo "Numbers between $num1 and $num2:"
i=$num1
while [ $i -le $num2 ]; do
    echo $i
    ((i++))
done

# Calculate sum using until statement
sum=0
i=$num1
until [ $i -gt $num2 ]; do
    sum=$((sum + i))
    ((i++))
done

echo "Sum of numbers between $num1 and $num2: $sum"
```

---

### Task 3: Using `case` Statement
#### g) Check if a Number is Zero or Non-zero

```bash
#!/bin/bash

# Input a number
echo "Enter a number: "
read number

# Check if the number is zero or non-zero
case $number in
    0)
        echo "The number is zero."
        ;;
    *)
        echo "The number is non-zero."
        ;;
esac
```

#### h) Check the Type of Character

```bash
#!/bin/bash

# Input a character
echo "Enter a character: "
read char

# Check whether the character is upper-case, lower-case, digit, or special character
case $char in
    [A-Z])
        echo "$char is an upper-case alphabet."
        ;;
    [a-z])
        echo "$char is a lower-case alphabet."
        ;;
    [0-9])
        echo "$char is a digit."
        ;;
    *)
        echo "$char is a special character."
        ;;
esac
```

---

### How to Execute:
1. Save each script to a file, e.g., `script1.sh`, `script2.sh`, etc.
2. Make the script executable by running: 
   ```bash
   chmod +x script1.sh
   ```
3. Run the script:
   ```bash
   ./script1.sh
   ```

Let me know if you need any further explanation!
