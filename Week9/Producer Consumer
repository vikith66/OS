#include <iostream>
#include <unistd.h>

using namespace std;

int *buffer;
int in = 0, out = 0;
int empty_slots, full = 0;
int mutex = 1, buffer_size;

void wait(int *s) {
    while (*s <= 0);
    (*s)--;
}

void signal(int *s) {
    (*s)++;
}

void producer() {
    if (empty_slots > 0) {
        wait(&empty_slots);
        wait(&mutex);

        buffer[in] = in + 1;
        cout << "Produced: " << buffer[in] << endl;
        in = (in + 1) % buffer_size;

        signal(&mutex);
        signal(&full);
    } else {
        cout << "Buffer is full." << endl;
    }
}

void consumer() {
    if (full > 0) {
        wait(&full);
        wait(&mutex);

        int item = buffer[out];
        cout << "Consumed: " << item << endl;
        out = (out + 1) % buffer_size;

        signal(&mutex);
        signal(&empty_slots);
    } else {
        cout << "Buffer is empty." << endl;
    }
}

void displayBufferStatus() {
    cout << "Items in buffer: " << full << endl;
}

int main() {
    cout << "Enter buffer size: ";
    cin >> buffer_size;
    
    buffer = new int[buffer_size];
    empty_slots = buffer_size;

    int ch;
    while (true) {
        cout << "\nMenu:\n";
        cout << "1. Produce\n";
        cout << "2. Consume\n";
        cout << "3. Display buffer status\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> ch;

        switch (ch) {
            case 1:
                producer();
                break;
            case 2:
                consumer();
                break;
            case 3:
                displayBufferStatus();
                break;
            case 4:
                cout << "Exiting...\n";
                delete[] buffer;
                return 0;
            default:
                cout << "Invalid choice\n";
        }
    }
}
